process ProcessOne = {
  source = DAQEcalTBInputService{
            untracked  vstring fileNames = {'file:H4-003237282-SM4-PEDESTAL-STD'}
            untracked int32 maxEvents = 3
  }

 # unpack raw data from test beam 
  module ecalEBunpacker = EcalDCCUnpackingModule{ }

 # producer of rechits starting from digis. Analytic Fit producer does not require any condition from the DB 

   module ecalUncalibHitMaker = EcalWeightUncalibRecHitProducer {
     string digiProducer = "ecalEBunpacker"
     string EBdigiCollection = ""
     string EEdigiCollection = ""
     string EBhitCollection = "EcalUncalibRecHits"
     string EEhitCollection = ""
   untracked int32 nMaxPrintout = 1 }

     module ecalRecHitMaker = EcalRecHitProducer{
       string uncalibRecHitProducer = "ecalUncalibHitMaker"
       string EBuncalibRecHitCollection = "EcalUncalibRecHits"
       string EEuncalibRecHitCollection = ""
       string EBrechitCollection = "EcalRecHits"
       string EErechitCollection = ""
       untracked int32 nMaxPrintout = 0
      }
# my analyzer
     module analysis = Analyzer {}
   
     es_source = EcalTrivialConditionRetriever{ }

// here define es source for miscalibration constants. Use PoolDBESSource
// to read ecalMiscalib.db _OR_  CaloMiscalibTools to read xml file.


#     es_source = PoolDBESSource{ VPSet toGet = {
#			      {string record = "EcalIntercalibConstantsRcd"
#			       string tag = "EcalIntercalibConstants"}
#			       }
#       bool loadAll = true
#       string connect = "sqlite_file:ecalMiscalib.db"
#       string timetype = "runnumber"
#     }
#     es_prefer = PoolDBESSource{}


     es_source = CaloMiscalibTools{
         untracked string fileNameBarrel = "miscalib_barrel_1fb-1.xml_small"
#         untracked string fileNameEndcap = "miscalib_endcap_1fb-1.xml"
	 }
      es_prefer = CaloMiscalibTools{}
   

 path p = { ecalEBunpacker, ecalUncalibHitMaker, ecalRecHitMaker}

}
